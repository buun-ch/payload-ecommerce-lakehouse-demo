
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'payload_ecommerce'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'payload_ecommerce'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Hooks to run at the start of dbt execution
# (Not needed for Trino - catalog connection configured in profiles.yml)
# on-run-start: []

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  payload_ecommerce:
    # Staging models (views for lightweight transformation)
    # Views are stored in Iceberg via Trino (fast, low-cost queries)
    staging:
      +materialized: view
      +schema: staging

    # Marts models (tables for persistent analytics)
    # Iceberg tables via Lakekeeper catalog (queryable by Trino, DuckDB, Spark)
    marts:
      +materialized: table
      +schema: marts

    # Example models (can be removed)
    example:
      +materialized: view
